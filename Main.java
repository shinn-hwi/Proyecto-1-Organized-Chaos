/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package amazon.Forms;

import amazon.ListProduct;
import amazon.ListRoute;
import amazon.ListStock;
import amazon.ListWarehouse;
import amazon.Product;
import amazon.Route;
import amazon.Stock;
import amazon.Warehouse;
import amazon.Grafo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sansa
 */
public class Main extends javax.swing.JFrame {

    public ListWarehouse ListWarehouse = new ListWarehouse();
    public ListProduct ListProduct = new ListProduct();
    public ListStock ListStock = new ListStock();
    public ListRoute ListRoute = new ListRoute();

    /**
     * Creates new form Main1
     */
    public Main() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Panel1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableWarehouse = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableStock = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableRoute = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        LabelWarehouse1 = new javax.swing.JLabel();
        NewWarehouse = new javax.swing.JButton();
        f_Warehouse = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        LabelWarehouse2 = new javax.swing.JLabel();
        f_Peso = new javax.swing.JTextField();
        LabelWarehouse3 = new javax.swing.JLabel();
        f_Arista = new javax.swing.JComboBox<>();
        NewWarehouse1 = new javax.swing.JButton();
        f_NameWarehouse = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        f_StockWarehouse = new javax.swing.JComboBox<>();
        LabelWarehouse4 = new javax.swing.JLabel();
        f_StockProduct = new javax.swing.JComboBox<>();
        LabelProduct1 = new javax.swing.JLabel();
        f_Stock = new javax.swing.JTextField();
        LabelWarehouse5 = new javax.swing.JLabel();
        AddStock = new javax.swing.JButton();
        LabelProduct2 = new javax.swing.JLabel();
        f_Product = new javax.swing.JTextField();
        AddProduct = new javax.swing.JButton();
        LoadFile = new javax.swing.JButton();
        SaveData = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(jTable4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Proyecto Estructura de Datos(GRAFOS)");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 204, 255)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Menú Principal");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 204, 255)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sandra V. Sánchez R.");
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 204, 255)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Universidad Metropolitana");
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 204, 255)));

        Panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        tableWarehouse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                ""
            }
        ));
        jScrollPane2.setViewportView(tableWarehouse);

        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                ""
            }
        ));
        tableProduct.setColumnSelectionAllowed(true);
        jScrollPane4.setViewportView(tableProduct);
        tableProduct.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        tableStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ));
        jScrollPane5.setViewportView(tableStock);

        tableRoute.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ));
        jScrollPane8.setViewportView(tableRoute);

        jLabel1.setText("ALMACENES");

        jLabel6.setText("PRODUCTOS");

        jLabel7.setText("INVENTARIO");

        jLabel8.setText("RUTAS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel1)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(164, 164, 164))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );

        Panel1.addTab("View Data", jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(jTable5);

        jLabel9.setText("RUTAS:");

        jLabel10.setText("PESOS:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        Panel1.addTab("View Grafo", jPanel3);

        LabelWarehouse1.setText("Warehouse:");

        NewWarehouse.setText("Add Warehouse");
        NewWarehouse.setActionCommand("");
        NewWarehouse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewWarehouseMouseClicked(evt);
            }
        });

        f_Warehouse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                f_WarehouseFocusLost(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Almacenes Adyacentes:"));

        LabelWarehouse2.setText("Arista:");

        LabelWarehouse3.setText("Peso:");

        f_Arista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f_AristaFocusGained(evt);
            }
        });
        f_Arista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_AristaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelWarehouse2)
                    .addComponent(LabelWarehouse3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(f_Peso, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f_Arista, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelWarehouse2)
                    .addComponent(f_Arista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f_Peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelWarehouse3))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        NewWarehouse1.setText("Add Arista");
        NewWarehouse1.setActionCommand("");
        NewWarehouse1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewWarehouse1MouseClicked(evt);
            }
        });

        f_NameWarehouse.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(NewWarehouse1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(NewWarehouse))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(LabelWarehouse1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(f_Warehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(f_NameWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(352, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelWarehouse1)
                    .addComponent(f_Warehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f_NameWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewWarehouse)
                    .addComponent(NewWarehouse1))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        Panel1.addTab("Warehouse", jPanel4);

        f_StockWarehouse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f_StockWarehouseFocusGained(evt);
            }
        });

        LabelWarehouse4.setText("Warehouse:");

        f_StockProduct.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f_StockProductFocusGained(evt);
            }
        });

        LabelProduct1.setText("Product:");

        f_Stock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                f_StockFocusLost(evt);
            }
        });

        LabelWarehouse5.setText("Stock:");

        AddStock.setText("Add Stock");
        AddStock.setActionCommand("");
        AddStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddStockMouseClicked(evt);
            }
        });

        LabelProduct2.setText("Product:");

        f_Product.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                f_ProductFocusLost(evt);
            }
        });

        AddProduct.setText("Add Product");
        AddProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddProductMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AddStock)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LabelWarehouse4)
                            .addComponent(LabelProduct1)
                            .addComponent(LabelWarehouse5)
                            .addComponent(LabelProduct2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(f_StockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_StockWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(AddProduct))
                .addContainerGap(379, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelProduct2)
                    .addComponent(f_Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddProduct)
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(f_StockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelProduct1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(f_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelWarehouse5))
                        .addGap(18, 18, 18)
                        .addComponent(AddStock))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(f_StockWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LabelWarehouse4)))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        Panel1.addTab("Gestión de Stock", jPanel6);

        LoadFile.setText("Load File");
        LoadFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoadFileMouseClicked(evt);
            }
        });
        LoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadFileActionPerformed(evt);
            }
        });

        SaveData.setText("Save Data");
        SaveData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveDataMouseClicked(evt);
            }
        });
        SaveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SaveData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoadFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LoadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SaveData, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        Panel1.getAccessibleContext().setAccessibleName("Mostrar Grafo");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoadFileMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_LoadFileMouseClicked

    private void LoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadFileActionPerformed
        // TODO add your handling code here:
        String directoryName = System.getProperty("user.dir");
        JFileChooser fileChooser = new JFileChooser(directoryName + "/Data");

        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        // Filtrar para seleccionar solo .Txt
        FileNameExtensionFilter imgFilter = new FileNameExtensionFilter("TXT Files", "txt");
        fileChooser.setFileFilter(imgFilter);

        int result = fileChooser.showOpenDialog(this);

        if (result != JFileChooser.CANCEL_OPTION) {

            File fileName = fileChooser.getSelectedFile();

            if ((fileName == null) || (!"AMAZON.TXT".equals(fileName.getName().toUpperCase())) || (fileName.getName().equals(""))) {
                JOptionPane.showMessageDialog(null, "El Nombre del archivo debe ser Amazon.txt y NO: " + fileName.getName().toUpperCase());
                //  txt.setText("Seleccione un archivo con el nombre Amazon.txt");
            } else {
                //  txt.setText(fileName.getAbsolutePath());
                JOptionPane.showMessageDialog(null, "Cargar datos en las Listas Creadas" + fileName.getName());
                String separator = ",";
                int process = 1;
                String record;
                String warehouseTemp = null;
                BufferedReader br = null;
                try {
                    //JOptionPane.showMessageDialog(null, "Archivo: " + fileName.getAbsolutePath());
                    br = new BufferedReader(new FileReader(fileName.getAbsolutePath()));

                    String lineTxt = br.readLine();
                    if (null != lineTxt) {
                        lineTxt = br.readLine();
                    }
                    String[] fields = lineTxt.split(separator);
                    record = fields[0];
                    while (null != lineTxt) {
                        //        JOptionPane.showMessageDialog(null, "Linea" + lineTxt);
                        if (process == 1) {
                            if (record.length() >= 7) {
                                if ("Almacen".equals(record.substring(0, 7)) && record.length() >= 7) {

                                    // Warehouse
                                    warehouseTemp = record.substring(8, 9);
                                    Warehouse warehouse = new Warehouse();
                                    warehouse.setCode(warehouseTemp);
                                    warehouse.setName(fields[0]);
                                    ListWarehouse.insertEnd(warehouse);
                                    //JOptionPane.showMessageDialog(null, "Warehouse" + warehouse.getName());
                                } else {
                                    AddProduct(fields, warehouseTemp);
                                }
                            } else {
                                AddProduct(fields, warehouseTemp);
                            }
                        } else {
                            // Rutas
                            if (record.length() >= 6) {
                                if ("Rutas;".equals(record.substring(0, 6)) && record.length() >= 6) {
                                } else {
                                    AddRoute(fields);
                                }
                            } else {
                                AddRoute(fields);
                            }
                        }

                        lineTxt = br.readLine();
                        if (null != lineTxt) {
                            fields = lineTxt.split(separator);
                            record = fields[0];

                            if (record.length() >= 6) {
                                if ("Rutas;".equals(record.substring(0, 6))) {
                                    process = 2;
                                }
                            }
                        }
                    }

                    br.close();
                    UpdateCoordenada();
                    ShowData();
                    ShowGrafo();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(LoadFile.class
                            .getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(LoadFile.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_LoadFileActionPerformed

    public void AddProduct(String fields[], String warehouseTemp) {
        // Checkear Product
        int checkProduct = 0;
        for (int i = 0; i <= ListProduct.getLenght() - 1; i++) {
            if (ListProduct.getProduct(i).getName().equals(fields[0])) {
                checkProduct = 1;
                break;
            }

        }

        if (checkProduct == 0) {
            Product product = new Product();
            product.setName(fields[0]);
            ListProduct.insertEnd(product);
        }
        //  JOptionPane.showMessageDialog(null, "Product: " + product.getName());
        // Stock
        Stock stock = new Stock();
        stock.setWarehouse(warehouseTemp);
        stock.setName(fields[0]);
        // Convertir a Numero
        // Quitar el ; para poder convertir
        stock.setAmount(Integer.parseInt(fields[1].replace(";", "")));
        ListStock.insertEnd(stock);
        //    JOptionPane.showMessageDialog(null, "Stock: " + stock.getName());

    }

    public void AddRoute(String fields[]) {
        Route route = new Route();
        route.setWarehouse(fields[0]);
        route.setWarehouseAdjacent(fields[1]);
        // Convertir a Numero
        route.setWeight(Integer.parseInt(fields[2]));
        ListRoute.insertEnd(route);
        //      JOptionPane.showMessageDialog(null, "Route: " + route.getWeight());
    }

    public void ShowData() {

        //TABLA ALMACEN
        DefaultTableModel model = new DefaultTableModel();
        //Inicializar Contenido
        model.setRowCount(0);

        model.addColumn("Nombre");
        model.addColumn("Nodo");

        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            model.addRow(new Object[]{ListWarehouse.getWarehouse(i).getName(), ListWarehouse.getWarehouse(i).getNodo()});
        }

        tableWarehouse.setModel(model);

        //TABLA PRODUCTO
        DefaultTableModel model2 = new DefaultTableModel();
        //Inicializar Contenido
        model2.setRowCount(0);

        model2.addColumn("Nombre");

        for (int i = 0; i <= ListProduct.getLenght() - 1; i++) {
            model2.addRow(new Object[]{ListProduct.getProduct(i).getName()});
        }

        tableProduct.setModel(model2);

        //TABLA INVENTARIO
        DefaultTableModel model3 = new DefaultTableModel();
        //Inicializar Contenido
        model3.setRowCount(0);

        model3.addColumn("Nombre");
        model3.addColumn("Cantidad");
        model3.addColumn("Almacen");

        for (int i = 0; i <= ListStock.getLenght() - 1; i++) {
            model3.addRow(new Object[]{ListStock.getStock(i).getName(), ListStock.getStock(i).getAmount(), ListStock.getStock(i).getWarehouse()});
        }

        tableStock.setModel(model3);

        //TABLA RUTA
        DefaultTableModel model4 = new DefaultTableModel();
        //Inicializar Contenido
        model4.setRowCount(0);

        model4.addColumn("Almacen");
        model4.addColumn("Almacen Adyacente");
        model4.addColumn("Peso");
        model4.addColumn("x");
        model4.addColumn("y");

        for (int i = 0; i <= ListRoute.getLenght() - 1; i++) {
            model4.addRow(new Object[]{ListRoute.getRoute(i).getWarehouse(), ListRoute.getRoute(i).getWarehouseAdjacent(), ListRoute.getRoute(i).getWeight(), ListRoute.getRoute(i).getX(), ListRoute.getRoute(i).getY()});
        }

        tableRoute.setModel(model4);

    }

    public void ShowGrafo() {

        int nodos = 0;
        int vertices;
        // Indica si es dirigido o no. 
        boolean dirigido = true;
        // Tamaño máximo de la tabla. 
        nodos = ListWarehouse.getLenght();
        // Número de vértices del grafo.
        vertices = nodos;
        // Obtener nombre de los nodos
        String[] nombreVertices = new String[nodos + 1];
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            nombreVertices[i + 1] = (ListWarehouse.getWarehouse(i).getCode());
        }
        String[] nuevo = new String[nodos + 1];
        String[] pesos = new String[nodos + 1];

        DefaultTableModel model = new DefaultTableModel();
        //Inicializar Contenido
        model.setRowCount(0);
        model.addColumn("");
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            model.addColumn(ListWarehouse.getWarehouse(i).getCode());
        }
        DefaultTableModel model2 = new DefaultTableModel();
        //Inicializar Contenido
        model2.setRowCount(0);
        model2.addColumn("");
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            model2.addColumn(ListWarehouse.getWarehouse(i).getCode());
        }

        // Matriz de adyacencias del grafo.
        boolean matrizAdy[][];
        matrizAdy = new boolean[nodos + 1][vertices + 1];
        // Matriz de Pesos.
        int matrizWeight[][];
        matrizWeight = new int[nodos + 1][vertices + 1];
        // Llenar el Grafo Vacio
        for (int x = 1; x <= nodos; x++) {
            for (int z = 1; z <= vertices; z++) {

                matrizWeight[x][z] = 0;
                if (x == z) {
                    matrizAdy[x][z] = true;
                } else {
                    matrizAdy[x][z] = false;
                }
            }
        }
        // Llenar Vertices Adyacente
        for (int i = 0; i <= ListRoute.getLenght() - 1; i++) {
            //ALMACENES ADYACENTES
            matrizAdy[ListRoute.getRoute(i).getX()][ListRoute.getRoute(i).getY()] = true;
            //PESOS
            matrizWeight[ListRoute.getRoute(i).getX()][ListRoute.getRoute(i).getY()] = ListRoute.getRoute(i).getWeight();
        }
        //Mostrar Grafo Adyacente
        for (int x = 1; x <= nodos; x++) {
            nuevo[0] = nombreVertices[x];
            for (int z = 1; z <= vertices; z++) {
                if (matrizAdy[x][z] == false) {
                    nuevo[z] = "0";
                } else {
                    nuevo[z] = "1";
                }
            }
            model.addRow(nuevo);
        }
        jTable2.setModel(model);
        //Mostrar Grafo Pesos
        for (int x = 1; x <= nodos; x++) {
            pesos[0] = nombreVertices[x];
            for (int z = 1; z <= vertices; z++) {

                pesos[z] = String.valueOf(matrizWeight[x][z]);

            }
            model2.addRow(pesos);
        }
        jTable5.setModel(model2);

//        Grafo.CreateGrafo(nodo, vertice);    
    }

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_formComponentShown

    private void SaveDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveDataMouseClicked
        // TODO add your handling code here:

        String directoryName = System.getProperty("user.dir");

        try ( PrintWriter writer = new PrintWriter(directoryName + "/Data/AmazonX.txt", "UTF-8")) {
            writer.println("Almacenes;");
            for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
                writer.println(ListWarehouse.getWarehouse(i).getName());
                //imprimir productos del almacen
                for (int x = 0; x <= ListStock.getLenght() - 1; x++) {
                    if (ListStock.getStock(x).getWarehouse().equals(ListWarehouse.getWarehouse(i).getCode())) {
                        if (x < ListStock.getLenght() - 1) {
                            writer.println(ListStock.getStock(x).getName() + "," + ListStock.getStock(x).getAmount());
                        } else {
                            writer.println(ListStock.getStock(x).getName() + "," + ListStock.getStock(x).getAmount() + ";");
                        }
                    }
                }

            }

            writer.println("Rutas;");
            for (int i = 0; i <= ListRoute.getLenght() - 1; i++) {
                writer.println(ListRoute.getRoute(i).getWarehouse() + "," + ListRoute.getRoute(i).getWarehouseAdjacent() + "," + ListRoute.getRoute(i).getWeight());
            }
            writer.close();
            JOptionPane.showMessageDialog(null, "El repositorio ha sido salvado en " + directoryName + "/Data/AmazonX.txt");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_SaveDataMouseClicked

    private void SaveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveDataActionPerformed

    private void f_StockWarehouseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f_StockWarehouseFocusGained
        // TODO add your handling code here:
        f_StockWarehouse.removeAllItems();
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            f_StockWarehouse.addItem(ListWarehouse.getWarehouse(i).getCode());
        }

    }//GEN-LAST:event_f_StockWarehouseFocusGained

    private void NewWarehouse1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewWarehouse1MouseClicked
        // TODO add your handling code here:
        int check = 0;
        if ("".equals(f_Warehouse.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Ingrese Warehouse:");
            f_Warehouse.requestFocus();
        } else {
            if ("".equals(f_Arista.getSelectedItem().toString().trim())) {
                JOptionPane.showMessageDialog(null, "Seleccione Arista:");
                f_Arista.requestFocus();
            } else {

                if ("".equals(f_Peso.getText().trim())) {
                    JOptionPane.showMessageDialog(null, "Ingrese Peso:");
                    f_Peso.requestFocus();
                } else {
                    // Chequear si ya Existe la Arista o Ruta
                    check = CheckArista(f_Warehouse.getText(), f_Arista.getSelectedItem().toString());

                    if (check == 1) {
                        JOptionPane.showMessageDialog(null, "La Arista y Camino Existe, Ingrese otra Arista:");
                        f_Arista.requestFocus();
                    } else {
                        Route route = new Route();
                        route.setWarehouse(f_Warehouse.getText().toUpperCase());
                        route.setWarehouseAdjacent(f_Arista.getSelectedItem().toString());
                        route.setWeight(Integer.parseInt(f_Peso.getText()));
                        ListRoute.insertEnd(route);
                        JOptionPane.showMessageDialog(null, "Vertice ADD to Grafo:");
                        f_Peso.setText("");
                        f_Arista.requestFocus();
                        UpdateCoordenada();
                        ShowData();
                        ShowGrafo();
                    }
                }
            }
        }
    }//GEN-LAST:event_NewWarehouse1MouseClicked

    private void f_AristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_AristaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f_AristaActionPerformed

    private void f_AristaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f_AristaFocusGained
        // TODO add your handling code here:
        f_Arista.removeAllItems();
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            if (!f_Warehouse.getText().equals(ListWarehouse.getWarehouse(i).getCode())) {
                f_Arista.addItem(ListWarehouse.getWarehouse(i).getCode());
            }
        }
    }//GEN-LAST:event_f_AristaFocusGained

    private void f_WarehouseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f_WarehouseFocusLost
        // TODO add your handling code here:
        f_Warehouse.setText(f_Warehouse.getText().toUpperCase());
        f_NameWarehouse.setText("Almacen " + f_Warehouse.getText().toUpperCase());
    }//GEN-LAST:event_f_WarehouseFocusLost

    private void NewWarehouseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewWarehouseMouseClicked
        // TODO add your handling code here:
        int check = 0;
        if ("".equals(f_Warehouse.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Ingrese Warehouse:");
            f_Warehouse.requestFocus();
        } else {
            // Chequear si Existe Almacen
            check = CheckWarehouse(f_Warehouse.getText());
            if (check == 1) {
                JOptionPane.showMessageDialog(null, "El Almacen Existe, Ingrese otro Código:");
                f_Warehouse.requestFocus();
            } else {
                Warehouse warehouse = new Warehouse();
                warehouse.setCode(f_Warehouse.getText().toUpperCase());
                warehouse.setName(f_NameWarehouse.getText());
                ListWarehouse.insertEnd(warehouse);
                JOptionPane.showMessageDialog(null, "Warehouse ADD to Grafo:");
                f_Arista.requestFocus();
                UpdateCoordenada();
                ShowData();

            }
        }
    }//GEN-LAST:event_NewWarehouseMouseClicked

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2ComponentShown

    private void f_StockProductFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f_StockProductFocusGained
        // TODO add your handling code here:
        f_StockProduct.removeAllItems();
        for (int x = 0; x <= ListProduct.getLenght() - 1; x++) {
            f_StockProduct.addItem(ListProduct.getProduct(x).getName());
        }

    }//GEN-LAST:event_f_StockProductFocusGained

    private void f_StockFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f_StockFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_f_StockFocusLost

    private void AddStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddStockMouseClicked
        // TODO add your handling code here:
        int check = 0;
        if ("".equals(f_StockWarehouse.getSelectedItem().toString().trim())) {
            JOptionPane.showMessageDialog(null, "Seleccione Warehouse:");
            f_StockWarehouse.requestFocus();
        } else {
            if ("".equals(f_StockProduct.getSelectedItem().toString().trim())) {
                JOptionPane.showMessageDialog(null, "Seleccione Product:");
                f_StockProduct.requestFocus();
            } else {
                if ("".equals(f_Stock.getText().trim())) {
                    JOptionPane.showMessageDialog(null, "Ingrese Cantidad:");
                    f_StockProduct.requestFocus();
                } else {
                    // Chequear si Existe Almacen
                    check = CheckProductStock(f_StockWarehouse.getSelectedItem().toString(), f_StockProduct.getSelectedItem().toString());
                    if (check != 0) {
                        ListStock.getStock(check).setAmount(Integer.parseInt(f_Stock.getText()));

                        JOptionPane.showMessageDialog(null, "Stock Actualizado");
                        f_StockWarehouse.setSelectedItem("");
                        f_StockProduct.setSelectedItem("");
                        f_Stock.setText("");
                        f_StockWarehouse.requestFocus();
                        UpdateCoordenada();
                        ShowData();
                    } else {
                        Stock stock = new Stock();
                        stock.setWarehouse(f_StockWarehouse.getSelectedItem().toString());
                        stock.setName(f_StockProduct.getSelectedItem().toString());
                        stock.setAmount(Integer.parseInt(f_Stock.getText()));
                        ListStock.insertEnd(stock);
                        JOptionPane.showMessageDialog(null, "Stock ADD to Grafo:");
                        f_StockWarehouse.setSelectedItem("");
                        f_StockProduct.setSelectedItem("");
                        f_Stock.setText("");
                        UpdateCoordenada();
                        ShowData();
                    }
                }
            }
        }
    }//GEN-LAST:event_AddStockMouseClicked

    private void f_ProductFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f_ProductFocusLost
        // TODO add your handling code here:
        f_StockWarehouse.requestFocus();
    }//GEN-LAST:event_f_ProductFocusLost

    private void AddProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductMouseClicked
        // TODO add your handling code here:
        int check = 0;
        if ("".equals(f_Product.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Ingrese Product:");
            f_Product.requestFocus();
        } else {
            // Chequear si Existe Almacen
            check = CheckProduct(f_Product.getText());
            if (check == 1) {
                JOptionPane.showMessageDialog(null, "Product Existe");
                f_StockWarehouse.setSelectedItem("");
                f_StockProduct.setSelectedItem(f_Product.getText());
                f_Product.setText("");
                f_StockWarehouse.requestFocus();
            } else {
                Product product = new Product();
                product.setName(f_Product.getText());
                ListProduct.insertEnd(product);
                JOptionPane.showMessageDialog(null, "Product ADD to Grafo:");
                f_Product.setText("");
                f_StockWarehouse.setSelectedItem("");
                f_StockProduct.setSelectedItem(f_Product.getText());
                f_Stock.setText("");
                UpdateCoordenada();
                ShowData();
            }
        }
    }//GEN-LAST:event_AddProductMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);

            }
        });
    }

    public void GetVertices(String[] nombreVertices) {
        for (int i = 0; i <= ListWarehouse.getLenght(); i++) {
            nombreVertices[i] = (ListWarehouse.getWarehouse(i).getName());
        }
    }

    public int CheckArista(String warehouse, String warehouseAdjacent) {
        int check = 0;
        for (int i = 0; i <= ListRoute.getLenght() - 1; i++) {
            if (warehouse.equals(ListRoute.getRoute(i).getWarehouse()) && warehouseAdjacent.equals(ListRoute.getRoute(i).getWarehouseAdjacent())) {
                check = 1;
                break;
            }
        }
        return check;
    }

    public int CheckWarehouse(String warehouse) {
        int check = 0;
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            if (warehouse.equals(ListWarehouse.getWarehouse(i).getCode())) {
                check = 1;
                break;
            }
        }
        return check;
    }

    public int CheckProduct(String product) {
        int check = 0;
        for (int i = 0; i <= ListProduct.getLenght() - 1; i++) {
            if (product.toUpperCase().equals(ListProduct.getProduct(i).getName().toUpperCase())) {
                check = 1;
                break;
            }
        }
        return check;
    }
        public int CheckProductStock(String warehouse, String product) {
        int check = 0;
        for (int i = 0; i <= ListStock.getLenght() - 1; i++) {
            if (warehouse.equals(ListStock.getStock(i).getWarehouse()) && product.equals(ListStock.getStock(i).getName())) {
                check = i;
                break;
            }
        }
        return check;
    }

    public void UpdateCoordenada() {
        // Asignar posicion al nodo
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            ListWarehouse.getWarehouse(i).setNodo(i + 1);
        }
        // Recorrer Rutas del Grafo
        for (int i = 0; i <= ListWarehouse.getLenght() - 1; i++) {
            ListWarehouse.getWarehouse(i).setNodo(i + 1);
            for (int x = 0; x <= ListRoute.getLenght() - 1; x++) {
                if (ListWarehouse.getWarehouse(i).getCode().equals(ListRoute.getRoute(x).getWarehouse())) {
                    ListRoute.getRoute(x).setX(ListWarehouse.getWarehouse(i).getNodo());
                }
                if (ListWarehouse.getWarehouse(i).getCode().equals(ListRoute.getRoute(x).getWarehouseAdjacent())) {
                    ListRoute.getRoute(x).setY(ListWarehouse.getWarehouse(i).getNodo());
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProduct;
    private javax.swing.JButton AddStock;
    private javax.swing.JLabel LabelProduct1;
    private javax.swing.JLabel LabelProduct2;
    private javax.swing.JLabel LabelWarehouse1;
    private javax.swing.JLabel LabelWarehouse2;
    private javax.swing.JLabel LabelWarehouse3;
    private javax.swing.JLabel LabelWarehouse4;
    private javax.swing.JLabel LabelWarehouse5;
    private javax.swing.JButton LoadFile;
    private javax.swing.JButton NewWarehouse;
    private javax.swing.JButton NewWarehouse1;
    private javax.swing.JTabbedPane Panel1;
    private javax.swing.JButton SaveData;
    private javax.swing.JComboBox<String> f_Arista;
    private javax.swing.JTextField f_NameWarehouse;
    private javax.swing.JTextField f_Peso;
    private javax.swing.JTextField f_Product;
    private javax.swing.JTextField f_Stock;
    private javax.swing.JComboBox<String> f_StockProduct;
    private javax.swing.JComboBox<String> f_StockWarehouse;
    private javax.swing.JTextField f_Warehouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTable tableRoute;
    private javax.swing.JTable tableStock;
    private javax.swing.JTable tableWarehouse;
    // End of variables declaration//GEN-END:variables

}
